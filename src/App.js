import React, { useState, useEffect } from "react";
import "./App.css";
import { Chat } from "./components/Chat";
import { initUserChat, initNewUserChat, readyEvent } from './apiChat'

export function App() {
  const [isOpenChat, setOpenChat] = useState(false);
  const [cuid, setCuid] = useState(() => {
    return localStorage.getItem("cuid") || '';
  });
  const [dialog, setDialog] = useState(() => {
    const saved = localStorage.getItem("dialog");
    const initialValue = JSON.parse(saved);
    return initialValue || [];
  });
  const uuid = '772c9859-4dd3-4a0d-b87d-d76b9f43cfa4';
  const euid = '00b2fcbe-f27f-437b-a0d5-91072d840ed3';


  //–ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞, –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
  useEffect(() => {
    localStorage.setItem("dialog", JSON.stringify(dialog));
  }, [dialog]);

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∞—Ç–∞(–ø–æ–ª—É—á–µ–Ω–∏–µ cuid)
  useEffect(async () => {
    if (!cuid) {
      let cuidVal = await initNewUserChat({ "uuid": uuid })
      setCuid(cuidVal)
      setDialog([await readyEvent({ 'cuid': cuidVal, 'euid': euid })])
    }
  }, [cuid])

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∞—Ç–∞(–ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
  useEffect(() => {
    if(cuid) {
      initUserChat({'uuid': uuid, 'cuid': cuid})
    }
  }, [])

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —á–∞—Ç–∞ —Å –æ—Ç–∫—Ä—ã—Ç–æ/–∑–∞–∫—Ä—ã—Ç–æ
  function changeStateChat() {
    setOpenChat(!isOpenChat)
  }

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é
  function clearDialog() {
    setCuid('')
  }

  return (
    <div className="app">
      <div className="app-left-column">
        <h2>–ß–∞—Ç-–±–æ—Ç üëâ</h2>
      </div>
      <div className="app-right-column">
        <div className="app-right-column_content">
          {isOpenChat ? <Chat dialog={dialog} clearDialog={clearDialog} setDialog={setDialog} /> : null}
        </div>
        <div className="app-right-column_btn">
          <button className="btn-chat" onClick={changeStateChat}> {isOpenChat ? '–ó–∞–∫—Ä—ã—Ç—å' : '–û—Ç–∫—Ä—ã—Ç—å'}</button>
        </div>
      </div>
    </div>
  );
}
